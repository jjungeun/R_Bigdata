source('C:/R/Rex/1.R')
source('C:/R/Rex/1.R')
source('C:/R/Rex/1.R')
source('C:/R/Rex/1.R')
source('C:/R/Rex/1.R')
source('C:/R/Rex/1.R')
source('C:/R/Rex/1.R')
source('C:/R/Rex/1.R')
source('C:/R/Rex/1.R')
source('C:/R/Rex/1.R')
source('C:/R/Rex/1.R')
source('C:/R/Rex/1.R')
source('C:/R/Rex/1.R')
source('C:/R/Rex/1.R')
source('C:/R/Rex/1.R')
source('C:/R/Rex/1.R', encoding = 'UTF-8')
source('C:/R/Rex/1.R', encoding = 'UTF-8')
source('C:/R/Rex/1.R')
source('C:/R/Rex/1.R')
source('C:/R/Rex/1.R')
source('C:/R/Rex/1.R')
source('C:/R/Rex/1.R')
source('C:/R/Rex/1.R')
source('C:/R/Rex/1.R')
source('C:/R/Rex/1.R')
install.packages("ggplot2")
source('C:/R/Rex/1.R')
source('C:/R/Rex/1.R')
install.packages("ggplot2")
install.packages("ggplot2")
library(ggplot2)
library(ggplot2)
source('C:/R/Rex/1.R')
install.packages("ggplot2")
source('C:/R/Rex/1.R')
source('C:/R/Rex/1.R')
source('C:/R/Rex/1.R')
source('C:/R/Rex/1.R')
source('C:/R/Rex/1.R')
source('C:/R/Rex/1.R')
qplot(x)
qplot(data=mpg,x=drv,y=hwy,geom="boxplot")
qplot(data=mpg,x=hwy)
qplot(data=mpg,x=cty)
qplot(data=mpg,x=drv,y=hwy,geom="boxplot")
mean(df_midterm$math)
mean(df_mid$math)
source('C:/R/Rex/1.R')
source('C:/R/Rex/1.R')
df_mid
df_mid
df_mid
class<-c(1,1,2,2)
class
df_mid <- data.frame(english,math,class)
df_mid
install.packages("readxl")
library(readxl)
library(readxl)
source('C:/R/Rex/1.R')
library(readxl)
df_exam1<-read_excel("excel_exam1.xlsx")
df_exam1
source('C:/R/Rex/1.R')
df_exam1<-read_excel("excel_exam.xlsx")
df_exam1
mean(df_exam)
mean(df_exam1)
library(readxl)
df_exam1<-read_excel("excel_exam.xlsx")
df_exam1
source('C:/R/Rex/1.R')
write.csv(df_exam1,file="csv_test.csv")
df_csv_exam<-read.csv("csv_test.csv")
df_csv_exam<-read.csv("csv_test.csv")
df_csv_exam
source('C:/R/Rex/1.R')
library(readxl)
df_exam1<-read_excel("excel_exam.xlsx",col_names = F)
df_exam1
source('C:/R/Rex/1.R')
df_exam1<-read_excel("excel_exam.xlsx")
df_exam1
ls()
Names(df_exam1)
str(df_exam1)
dim(df_exam1)
ls()
Names(df_exam1)
source('C:/R/Rex/1.R')
names(df_exam1)
str(df_exam1)
source('C:/R/Rex/1.R')
dim(df_exam1)
class(df_exam1)
df_exam1
head(df_exam1,n=10)
tail(df_exam1,n=5)
# uniform distribution simulate
# p = 1/n, n of die=6
roll <- 1000
n <- 6
die <- ceiling(runif(roll)*n)
b <- table(die)
barplot(b)
roll <- 100
dice <- ceiling(runif(roll)*6) + ceiling(runif(roll)*6)
c <- table(dice)
barplot(c)
# uniform distribution simulate
# p = 1/n, n of die=6
roll <- 1000
n <- 6
die <- ceiling(runif(roll)*n)
b <- table(die)
barplot(b)
# uniform distribution simulate
# p = 1/n, n of die=6
roll <- 100
n <- 6
die <- ceiling(runif(roll)*n)
b <- table(die)
barplot(b)
# p = 1/n, n of die=6
roll <- 10000
n <- 6
die <- ceiling(runif(roll)*n)
b <- table(die)
barplot(b)
# uniform distribution simulate
# p = 1/n, n of die=6
roll <- 1000000
n <- 6
die <- ceiling(runif(roll)*n)
b <- table(die)
barplot(b)
# uniform distribution simulate
# p = 1/n, n of die=6
roll <- 10
n <- 6
die <- ceiling(runif(roll)*n)
b <- table(die)
barplot(b)
# uniform distribution simulate
# p = 1/n, n of die=6
roll <- 1000
1/n, n of die=6
roll <- 1000
n <- 6
die <- ceiling(runif(roll)*n)
b <- table(die)
barplot(b)
mean(b+c)
roll <- 100
dice <- ceiling(runif(roll)*6) + ceiling(runif(roll)*6)
c <- table(dice)
barplot(c)
roll <- 1000
dice <- ceiling(runif(roll)*6) + ceiling(runif(roll)*6)
c <- table(dice)
barplot(c)
summary(gender)
gender <- c(rep("male",20), rep("female",30))
gender <- factor(gender)
gender
summary(gender)
gender <- c(rep("male",20), rep("female",30))
gender <- factor(gender)
gender
summary(gender)
source('C:/R/Rex/1.R')
install.packages("dplyr")
library(tidyr)
member
member
a <- gather(member, key, value, namef:agem)
b <- separate(a,key, c("variable","type"), 1)
b <- separate(a,key, c("variable","type"), 4)
b <- separate(a,key, c("variable","type"), -2)
new <- spread(b,variable,value)
new
member <- data.frame(family=c(1,2,3), namef=c("aaa","bbb","ccc"),
agef=c(20,30,40),namem=c("ddd","eee","fff"),
agem=c(34,23,45))
member
a <- gather(member, key, value, namef:agem)
new2 <- member %>%
gather(key, value, namef:agem) %>%
separate(key, c("variable","type"), -2) %>%
spread(variable, value)
new2
new
source('C:/R/Rex/1.R')
new2<-member %>%
gather(key,value,namef:agem) %>%
separate(key,c("variable","type"),-2) %>%
spread(variable,value)
new2
new
new2
filter(new2, type=="f")
new2 %>% filter(type=="f")
new2
filter(new2, type=="ef")
new2 %>% filter(type=="ef")
filter(new2, age >=30)
new2 %>% filter(age >=30)
filter(new2, ag >=30)
new2 %>% filter(ag >=30)
new2 %>% filter(type=="f" & ag>=30)
new2 %>% filter(ag >=30)
new2 %>% filter(type=="ef" & ag>=30)
new2 %>% filter(type=="em" & ag>=30)
new2 %>% filter(family %in% c(1,2))
new2 %>% filter(family %in% c(1:3))
source('C:/R/Rex/1.R')
